import{r as n,o as s,c as a,b as t,w as p,d as o,a as c}from"./app.8266619b.js";const e='{"title":"代码演示","description":"","frontmatter":{},"headers":[{"level":2,"title":"代码演示","slug":"代码演示"},{"level":2,"title":"参数","slug":"参数"},{"level":2,"title":"源码","slug":"源码"}],"relativePath":"components/Notify/index.md","lastUpdated":1632827759397}',u={},l=t("h2",{id:"代码演示"},"代码演示",-1),k=t("div",{class:"language-vue"},[t("pre",null,[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("template")]),t("span",{class:"token punctuation"},">")]),o("\n  "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("div")]),o(),t("span",{class:"token attr-name"},"class"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("demo-notify"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Button")]),o(),t("span",{class:"token attr-name"},"type"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("success"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"@click"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("notifySuccess"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),o("Success"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("Button")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Button")]),o(),t("span",{class:"token attr-name"},"type"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("info"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"@click"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("notifyInfo"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),o("Info"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("Button")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Button")]),o(),t("span",{class:"token attr-name"},"type"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("warning"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"@click"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("notifyWarn"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),o("Warn"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("Button")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Button")]),o(),t("span",{class:"token attr-name"},"type"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("danger"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"@click"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("notifyError"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),o("Error"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("Button")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Button")]),o(),t("span",{class:"token attr-name"},"type"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("info"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"@click"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("notifyCustom"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),o("Custom"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("Button")]),t("span",{class:"token punctuation"},">")]),o("\n  "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("div")]),t("span",{class:"token punctuation"},">")]),o("\n"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("template")]),t("span",{class:"token punctuation"},">")]),o("\n\n"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("script")]),t("span",{class:"token punctuation"},">")]),t("span",{class:"token script"},[t("span",{class:"token language-javascript"},[o("\n"),t("span",{class:"token keyword"},"import"),o(" Notify "),t("span",{class:"token keyword"},"from"),o(),t("span",{class:"token string"},'"./index"'),t("span",{class:"token punctuation"},";"),o("\n"),t("span",{class:"token keyword"},"export"),o(),t("span",{class:"token keyword"},"default"),o(),t("span",{class:"token punctuation"},"{"),o("\n  methods"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token punctuation"},"{"),o("\n    "),t("span",{class:"token function"},"notifySuccess"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token punctuation"},"{"),o("\n      Notify"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"success"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},'"成功提示"'),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),o("\n    "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},","),o("\n    "),t("span",{class:"token function"},"notifyInfo"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token punctuation"},"{"),o("\n      Notify"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"info"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},'"信息提示"'),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),o("\n    "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},","),o("\n    "),t("span",{class:"token function"},"notifyWarn"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token punctuation"},"{"),o("\n      Notify"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"warn"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},'"警告提示"'),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),o("\n    "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},","),o("\n    "),t("span",{class:"token function"},"notifyError"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token punctuation"},"{"),o("\n      Notify"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"error"),t("span",{class:"token punctuation"},"("),t("span",{class:"token string"},'"失败提示"'),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),o("\n    "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},","),o("\n    "),t("span",{class:"token function"},"notifyCustom"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token punctuation"},"{"),o("\n      Notify"),t("span",{class:"token punctuation"},"."),t("span",{class:"token function"},"custom"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},"{"),o("\n        type"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token string"},'"success"'),t("span",{class:"token punctuation"},","),o("\n        content"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token string"},'"时间为5s"'),t("span",{class:"token punctuation"},","),o("\n        duration"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token number"},"5000"),t("span",{class:"token punctuation"},","),o("\n      "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},")"),t("span",{class:"token punctuation"},";"),o("\n    "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},","),o("\n  "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},","),o("\n"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),o("\n")])]),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("script")]),t("span",{class:"token punctuation"},">")]),o("\n"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("style")]),o(),t("span",{class:"token attr-name"},"lang"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("scss"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),t("span",{class:"token style"},[t("span",{class:"token language-css"},[o("\n"),t("span",{class:"token selector"},".demo-notify"),o(),t("span",{class:"token punctuation"},"{"),o("\n  "),t("span",{class:"token property"},"padding"),t("span",{class:"token punctuation"},":"),o(" 10px 0"),t("span",{class:"token selector"},";\n  > *"),o(),t("span",{class:"token punctuation"},"{"),o("\n    "),t("span",{class:"token property"},"margin-right"),t("span",{class:"token punctuation"},":"),o(" 20px"),t("span",{class:"token punctuation"},";"),o("\n    "),t("span",{class:"token property"},"margin-bottom"),t("span",{class:"token punctuation"},":"),o(" 20px"),t("span",{class:"token punctuation"},";"),o("\n  "),t("span",{class:"token punctuation"},"}"),o("\n"),t("span",{class:"token punctuation"},"}"),o("\n")])]),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("style")]),t("span",{class:"token punctuation"},">")]),o("\n")])])],-1),i=c('<h2 id="参数">参数</h2><p>Cannot read property &#39;content&#39; of null</p><h2 id="源码">源码</h2><div class="language-tsx"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n  createApp<span class="token punctuation">,</span>\n  Teleport<span class="token punctuation">,</span>\n  ComponentPublicInstance<span class="token punctuation">,</span>\n  defineComponent<span class="token punctuation">,</span>\n  PropType<span class="token punctuation">,</span>\n  TransitionGroup<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n  NotifyOption<span class="token punctuation">,</span>\n  NotifyType<span class="token punctuation">,</span>\n  NotifyParams<span class="token punctuation">,</span>\n  NotifyCustomOption<span class="token punctuation">,</span>\n  NotifyCustom<span class="token punctuation">,</span>\n  NotifyConfig<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./types&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Icon <span class="token keyword">from</span> <span class="token string">&quot;../Icon&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&quot;./index.scss&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token constant">DURING_DEFAULT</span> <span class="token operator">=</span> <span class="token number">2000</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> notifyWrapper<span class="token operator">:</span> ComponentPublicInstance<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> seed <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> NotifyApp <span class="token operator">=</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&quot;NotifyApp&quot;</span><span class="token punctuation">,</span>\n  props<span class="token operator">:</span> <span class="token punctuation">{</span>\n    options<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">type</span><span class="token operator">:</span> <span class="token builtin">Array</span> <span class="token keyword">as</span> PropType<span class="token operator">&lt;</span>NotifyConfig<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n      required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token function-variable function">getIconType</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">type<span class="token operator">?</span><span class="token operator">:</span> NotifyType</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">case</span> NotifyType<span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token operator">:</span>\n          <span class="token keyword">return</span> <span class="token string">&quot;ok-o&quot;</span><span class="token punctuation">;</span>\n        <span class="token keyword">case</span> NotifyType<span class="token punctuation">.</span><span class="token constant">INFO</span><span class="token operator">:</span>\n          <span class="token keyword">return</span> <span class="token string">&quot;info&quot;</span><span class="token punctuation">;</span>\n        <span class="token keyword">case</span> NotifyType<span class="token punctuation">.</span><span class="token constant">WARN</span><span class="token operator">:</span>\n          <span class="token keyword">return</span> <span class="token string">&quot;info&quot;</span><span class="token punctuation">;</span>\n        <span class="token keyword">case</span> NotifyType<span class="token punctuation">.</span><span class="token constant">ERROR</span><span class="token operator">:</span>\n          <span class="token keyword">return</span> <span class="token string">&quot;close-o&quot;</span><span class="token punctuation">;</span>\n        <span class="token keyword">default</span><span class="token operator">:</span>\n          <span class="token keyword">return</span> <span class="token string">&quot;info&quot;</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TransitionGroup</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n        </span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n            <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>ref<span class="token punctuation">}</span></span>\n            <span class="token attr-name">class</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n              <span class="token string">&quot;Notify&quot;</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                <span class="token string">&quot;Notify-success&quot;</span><span class="token operator">:</span> item<span class="token punctuation">.</span><span class="token keyword">type</span> <span class="token operator">===</span> NotifyType<span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">,</span>\n                <span class="token string">&quot;Notify-info&quot;</span><span class="token operator">:</span> item<span class="token punctuation">.</span><span class="token keyword">type</span> <span class="token operator">===</span> NotifyType<span class="token punctuation">.</span><span class="token constant">INFO</span><span class="token punctuation">,</span>\n                <span class="token string">&quot;Notify-warn&quot;</span><span class="token operator">:</span> item<span class="token punctuation">.</span><span class="token keyword">type</span> <span class="token operator">===</span> NotifyType<span class="token punctuation">.</span><span class="token constant">WARN</span><span class="token punctuation">,</span>\n                <span class="token string">&quot;Notify-error&quot;</span><span class="token operator">:</span> item<span class="token punctuation">.</span><span class="token keyword">type</span> <span class="token operator">===</span> NotifyType<span class="token punctuation">.</span><span class="token constant">ERROR</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n          <span class="token punctuation">&gt;</span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Notify-icon<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">getIconType</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token keyword">type</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Notify-content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>content<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">TransitionGroup</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">startNotify</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">options<span class="token operator">:</span> NotifyOption</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>notifyWrapper<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    notifyWrapper <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n          notifyList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      methods<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function">appendOption</span><span class="token punctuation">(</span><span class="token parameter">config<span class="token operator">:</span> NotifyConfig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>notifyList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">removeOption</span><span class="token punctuation">(</span><span class="token parameter">config<span class="token operator">:</span> NotifyConfig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>notifyList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>notifyList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>\n            <span class="token punctuation">(</span><span class="token parameter">item<span class="token operator">:</span> NotifyConfig</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>ref <span class="token operator">!==</span> config<span class="token punctuation">.</span>ref\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Teleport</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>body<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Notify-wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">NotifyApp</span></span> <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>notifyList<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Teleport</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">const</span> currentSeed <span class="token operator">=</span> seed<span class="token operator">++</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span>options<span class="token punctuation">,</span>\n    ref<span class="token operator">:</span> currentSeed<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  notifyWrapper<span class="token punctuation">.</span><span class="token function">appendOption</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    notifyWrapper<span class="token punctuation">.</span><span class="token function">removeOption</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>duration <span class="token operator">||</span> <span class="token constant">DURING_DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Notify <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">info</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">options<span class="token operator">:</span> NotifyParams</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> options <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">startNotify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        content<span class="token operator">:</span> options<span class="token punctuation">,</span>\n        <span class="token keyword">type</span><span class="token operator">:</span> NotifyType<span class="token punctuation">.</span><span class="token constant">INFO</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token function">startNotify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token operator">...</span>options<span class="token punctuation">,</span>\n        <span class="token keyword">type</span><span class="token operator">:</span> NotifyType<span class="token punctuation">.</span><span class="token constant">INFO</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">options<span class="token operator">:</span> NotifyParams</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> options <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">startNotify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        content<span class="token operator">:</span> options<span class="token punctuation">,</span>\n        <span class="token keyword">type</span><span class="token operator">:</span> NotifyType<span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token function">startNotify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token operator">...</span>options<span class="token punctuation">,</span>\n        <span class="token keyword">type</span><span class="token operator">:</span> NotifyType<span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">warn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">options<span class="token operator">:</span> NotifyParams</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> options <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">startNotify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        content<span class="token operator">:</span> options<span class="token punctuation">,</span>\n        <span class="token keyword">type</span><span class="token operator">:</span> NotifyType<span class="token punctuation">.</span><span class="token constant">WARN</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token function">startNotify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token operator">...</span>options<span class="token punctuation">,</span>\n        <span class="token keyword">type</span><span class="token operator">:</span> NotifyType<span class="token punctuation">.</span><span class="token constant">WARN</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">options<span class="token operator">:</span> NotifyParams</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> options <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">startNotify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        content<span class="token operator">:</span> options<span class="token punctuation">,</span>\n        <span class="token keyword">type</span><span class="token operator">:</span> NotifyType<span class="token punctuation">.</span><span class="token constant">ERROR</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token function">startNotify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token operator">...</span>options<span class="token punctuation">,</span>\n        <span class="token keyword">type</span><span class="token operator">:</span> NotifyType<span class="token punctuation">.</span><span class="token constant">ERROR</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">custom</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">options<span class="token operator">:</span> NotifyCustomOption</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token keyword">type</span> <span class="token operator">=</span> NotifyCustom<span class="token punctuation">[</span>options<span class="token punctuation">.</span><span class="token keyword">type</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token function">startNotify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token operator">...</span>options<span class="token punctuation">,</span>\n      <span class="token keyword">type</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Notify<span class="token punctuation">;</span>\n</code></pre></div>',4);u.render=function(o,c,e,u,r,y){const f=n("frame");return s(),a("div",null,[l,t(f,{hashPath:""},{default:p((()=>[k])),_:1}),i])};export default u;export{e as __pageData};
