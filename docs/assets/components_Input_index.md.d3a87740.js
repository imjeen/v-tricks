import{r as n,o as a,c as s,b as t,w as p,d as o,a as e}from"./app.8266619b.js";const c='{"title":"代码演示","description":"","frontmatter":{},"headers":[{"level":2,"title":"代码演示","slug":"代码演示"},{"level":2,"title":"参数","slug":"参数"},{"level":2,"title":"参数","slug":"参数-2"},{"level":2,"title":"源码","slug":"源码"}],"relativePath":"components/Input/index.md","lastUpdated":1632827759401}',u={},l=t("h2",{id:"代码演示"},"代码演示",-1),k=t("div",{class:"language-vue"},[t("pre",null,[t("code",null,[t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("template")]),t("span",{class:"token punctuation"},">")]),o("\n  "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("div")]),o(),t("span",{class:"token attr-name"},"class"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("demo-input"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("基础用法"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Input")]),o(),t("span",{class:"token attr-name"},"placeholder"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("最多输入15字"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"maxlength"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("15"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token punctuation"},"/>")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("带图标"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Input")]),o(),t("span",{class:"token attr-name"},"icon"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("search"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"placeholder"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("搜索"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token punctuation"},"/>")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("带前后缀"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Input")]),o(),t("span",{class:"token attr-name"},"inline"),t("span",{class:"token punctuation"},">")]),o("\n      "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("template")]),o(),t("span",{class:"token attr-name"},"#prepend"),t("span",{class:"token punctuation"},">")]),o("$"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("template")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("Input")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Input")]),o(),t("span",{class:"token attr-name"},"inline"),t("span",{class:"token punctuation"},">")]),o("\n      "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("template")]),o(),t("span",{class:"token attr-name"},"#append"),t("span",{class:"token punctuation"},">")]),o(".00"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("template")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("Input")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Input")]),o(),t("span",{class:"token attr-name"},"icon"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("search"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"inline"),t("span",{class:"token punctuation"},">")]),o("\n      "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("template")]),o(),t("span",{class:"token attr-name"},"#prepend"),t("span",{class:"token punctuation"},">")]),o("love"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("template")]),t("span",{class:"token punctuation"},">")]),o("\n      "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("template")]),o(),t("span",{class:"token attr-name"},"#append"),t("span",{class:"token punctuation"},">")]),o(".com"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("template")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("Input")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("大号一点"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Input")]),o(),t("span",{class:"token attr-name"},"size"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("large"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"placeholder"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("最多输入15字"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"maxlength"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("15"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"inline"),o(),t("span",{class:"token punctuation"},"/>")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Input")]),o(),t("span",{class:"token attr-name"},"size"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("large"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"icon"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("search"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"placeholder"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("搜索"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"inline"),o(),t("span",{class:"token punctuation"},"/>")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Input")]),o(),t("span",{class:"token attr-name"},"size"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("large"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"inline"),t("span",{class:"token punctuation"},">")]),o("\n      "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("template")]),o(),t("span",{class:"token attr-name"},"#prepend"),t("span",{class:"token punctuation"},">")]),o("$"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("template")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("Input")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("小号一点"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Input")]),o(),t("span",{class:"token attr-name"},"size"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("small"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"placeholder"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("最多输入15字"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"maxlength"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("15"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"inline"),o(),t("span",{class:"token punctuation"},"/>")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Input")]),o(),t("span",{class:"token attr-name"},"size"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("small"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"icon"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("search"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"placeholder"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("搜索"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"inline"),o(),t("span",{class:"token punctuation"},"/>")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Input")]),o(),t("span",{class:"token attr-name"},"size"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("small"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"inline"),t("span",{class:"token punctuation"},">")]),o("\n      "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("template")]),o(),t("span",{class:"token attr-name"},"#prepend"),t("span",{class:"token punctuation"},">")]),o("$"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("template")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("Input")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("占满宽度"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Input")]),o(),t("span",{class:"token attr-name"},"placeholder"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("请输入文章标题"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"size"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("large"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"block"),o(),t("span",{class:"token punctuation"},"/>")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("错误样式"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Input")]),o(),t("span",{class:"token attr-name"},"placeholder"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("有问题..."),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"inline"),o(),t("span",{class:"token attr-name"},"hasError"),o(),t("span",{class:"token punctuation"},"/>")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Input")]),o(),t("span",{class:"token attr-name"},"icon"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("search"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"placeholder"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("带图标"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"inline"),o(),t("span",{class:"token attr-name"},"hasError"),o(),t("span",{class:"token punctuation"},"/>")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("禁用"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Input")]),o(),t("span",{class:"token attr-name"},"placeholder"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("不可编辑"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"disabled"),o(),t("span",{class:"token punctuation"},"/>")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("只读"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("h2")]),t("span",{class:"token punctuation"},">")]),o("\n    "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("Input")]),o(),t("span",{class:"token attr-name"},"modelValue"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("只读"),t("span",{class:"token punctuation"},'"')]),o(),t("span",{class:"token attr-name"},"readonly"),o(),t("span",{class:"token punctuation"},"/>")]),o("\n  "),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("div")]),t("span",{class:"token punctuation"},">")]),o("\n"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("template")]),t("span",{class:"token punctuation"},">")]),o("\n\n"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("script")]),t("span",{class:"token punctuation"},">")]),t("span",{class:"token script"},[t("span",{class:"token language-javascript"},[o("\n"),t("span",{class:"token keyword"},"export"),o(),t("span",{class:"token keyword"},"default"),o(),t("span",{class:"token punctuation"},"{"),o("\n  "),t("span",{class:"token function"},"data"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token punctuation"},"{"),o("\n    "),t("span",{class:"token keyword"},"return"),o(),t("span",{class:"token punctuation"},"{"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),o("\n  "),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},","),o("\n  methods"),t("span",{class:"token operator"},":"),o(),t("span",{class:"token punctuation"},"{"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},","),o("\n  "),t("span",{class:"token function"},"created"),t("span",{class:"token punctuation"},"("),t("span",{class:"token punctuation"},")"),o(),t("span",{class:"token punctuation"},"{"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},","),o("\n"),t("span",{class:"token punctuation"},"}"),t("span",{class:"token punctuation"},";"),o("\n")])]),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("script")]),t("span",{class:"token punctuation"},">")]),o("\n\n"),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"<"),o("style")]),o(),t("span",{class:"token attr-name"},"lang"),t("span",{class:"token attr-value"},[t("span",{class:"token punctuation attr-equals"},"="),t("span",{class:"token punctuation"},'"'),o("scss"),t("span",{class:"token punctuation"},'"')]),t("span",{class:"token punctuation"},">")]),t("span",{class:"token style"},[t("span",{class:"token language-css"},[o("\n"),t("span",{class:"token selector"},".demo-input"),o(),t("span",{class:"token punctuation"},"{"),o("\n  "),t("span",{class:"token property"},"padding"),t("span",{class:"token punctuation"},":"),o(" 10px"),t("span",{class:"token punctuation"},";"),o("\n"),t("span",{class:"token punctuation"},"}"),o("\n")])]),t("span",{class:"token tag"},[t("span",{class:"token tag"},[t("span",{class:"token punctuation"},"</"),o("style")]),t("span",{class:"token punctuation"},">")]),o("\n")])])],-1),i=e('<h2 id="参数">参数</h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This is a tip</p></div><h2 id="参数-2">参数</h2><p>Cannot read property &#39;content&#39; of null</p><h2 id="源码">源码</h2><div class="language-tsx"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n  defineComponent<span class="token punctuation">,</span>\n  PropType<span class="token punctuation">,</span>\n  InputHTMLAttributes<span class="token punctuation">,</span>\n  ref<span class="token punctuation">,</span>\n  watch<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Icon <span class="token keyword">from</span> <span class="token string">&quot;../Icon&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&quot;./index.scss&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Input <span class="token operator">=</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&quot;Input&quot;</span><span class="token punctuation">,</span>\n  props<span class="token operator">:</span> <span class="token punctuation">{</span>\n    hasError<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">type</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token keyword">type</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">type</span><span class="token operator">:</span> String <span class="token keyword">as</span> PropType<span class="token operator">&lt;</span>InputHTMLAttributes<span class="token punctuation">[</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    icon<span class="token operator">:</span> String<span class="token punctuation">,</span>\n    inline<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">type</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    block<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">type</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    size<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">type</span><span class="token operator">:</span> String <span class="token keyword">as</span> PropType<span class="token operator">&lt;</span><span class="token string">&quot;small&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;normal&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;large&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;normal&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    maxlength<span class="token operator">:</span> <span class="token punctuation">[</span>String<span class="token punctuation">,</span> Number<span class="token punctuation">]</span><span class="token punctuation">,</span>\n    max<span class="token operator">:</span> Number<span class="token punctuation">,</span>\n    min<span class="token operator">:</span> Number<span class="token punctuation">,</span>\n    disabled<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>\n    <span class="token keyword">readonly</span><span class="token operator">:</span> Boolean<span class="token punctuation">,</span>\n    autofocus<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>\n    name<span class="token operator">:</span> String<span class="token punctuation">,</span>\n    placeholder<span class="token operator">:</span> String<span class="token punctuation">,</span>\n    modelValue<span class="token operator">:</span> String<span class="token punctuation">,</span>\n    onFocus<span class="token operator">:</span> <span class="token builtin">Function</span> <span class="token keyword">as</span> PropType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token operator">:</span> FocusEvent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n    onBlur<span class="token operator">:</span> <span class="token builtin">Function</span> <span class="token keyword">as</span> PropType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token operator">:</span> FocusEvent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n    onPressEnter<span class="token operator">:</span> <span class="token builtin">Function</span> <span class="token keyword">as</span> PropType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token operator">:</span> KeyboardEvent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n    onPressCtrlEnter<span class="token operator">:</span> <span class="token builtin">Function</span> <span class="token keyword">as</span> PropType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token operator">:</span> KeyboardEvent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n    onKeypress<span class="token operator">:</span> <span class="token builtin">Function</span> <span class="token keyword">as</span> PropType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token operator">:</span> KeyboardEvent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n    onKeydown<span class="token operator">:</span> <span class="token builtin">Function</span> <span class="token keyword">as</span> PropType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token operator">:</span> KeyboardEvent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n    onKeyup<span class="token operator">:</span> <span class="token builtin">Function</span> <span class="token keyword">as</span> PropType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token operator">:</span> KeyboardEvent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n    onChange<span class="token operator">:</span> <span class="token builtin">Function</span> <span class="token keyword">as</span> PropType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token operator">:</span> Event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n    onInput<span class="token operator">:</span> <span class="token builtin">Function</span> <span class="token keyword">as</span> PropType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token operator">:</span> Event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> <span class="token punctuation">{</span> emit<span class="token punctuation">,</span> slots <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>modelValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">watch</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;update:modelValue&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">watch</span><span class="token punctuation">(</span>\n      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> props<span class="token punctuation">.</span>modelValue<span class="token punctuation">,</span>\n      <span class="token punctuation">(</span><span class="token parameter">newValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        value<span class="token punctuation">.</span>value <span class="token operator">=</span> newValue<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">onInput</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token operator">:</span> KeyboardEvent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      value<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>target <span class="token keyword">as</span> HTMLInputElement<span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n      props<span class="token punctuation">.</span>onInput<span class="token operator">?.</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">onKeyup</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e<span class="token operator">:</span> KeyboardEvent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      props<span class="token punctuation">.</span>onKeyup<span class="token operator">?.</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token string">&quot;Enter&quot;</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>ctrlKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        props<span class="token punctuation">.</span>onPressCtrlEnter<span class="token operator">?.</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token string">&quot;Enter&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        props<span class="token punctuation">.</span>onPressEnter<span class="token operator">?.</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> input <span class="token operator">=</span> <span class="token punctuation">(</span>\n        <span class="token operator">&lt;</span>input\n          <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;Input&quot;</span>\n          <span class="token keyword">type</span><span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span><span class="token keyword">type</span><span class="token punctuation">}</span>\n          maxlength<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>maxlength <span class="token operator">?</span> <span class="token operator">+</span>props<span class="token punctuation">.</span>maxlength <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>placeholder<span class="token punctuation">}</span>\n          disabled<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>disabled<span class="token punctuation">}</span>\n          <span class="token keyword">readonly</span><span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span><span class="token keyword">readonly</span><span class="token punctuation">}</span>\n          name<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>name<span class="token punctuation">}</span>\n          autofocus<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>autofocus<span class="token punctuation">}</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span>value<span class="token punctuation">.</span>value<span class="token punctuation">}</span>\n          min<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>min<span class="token punctuation">}</span>\n          max<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>max<span class="token punctuation">}</span>\n          <span class="token comment">// @ts-ignore</span>\n          onInput<span class="token operator">=</span><span class="token punctuation">{</span>onInput<span class="token punctuation">}</span>\n          onFocus<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>onFocus<span class="token punctuation">}</span>\n          onBlur<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>onBlur<span class="token punctuation">}</span>\n          onKeyup<span class="token operator">=</span><span class="token punctuation">{</span>onKeyup<span class="token punctuation">}</span>\n          onKeypress<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>onKeypress<span class="token punctuation">}</span>\n          onKeydown<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>onKeydown<span class="token punctuation">}</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>onChange<span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">&gt;</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n          <span class="token attr-name">class</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n            <span class="token string">&quot;Input-wrapper&quot;</span><span class="token punctuation">,</span>\n            <span class="token punctuation">{</span>\n              <span class="token string">&quot;Input-inline&quot;</span><span class="token operator">:</span> props<span class="token punctuation">.</span>inline<span class="token punctuation">,</span>\n              <span class="token string">&quot;Input-block&quot;</span><span class="token operator">:</span> props<span class="token punctuation">.</span>block<span class="token punctuation">,</span>\n              <span class="token string">&quot;Input-large&quot;</span><span class="token operator">:</span> props<span class="token punctuation">.</span>size <span class="token operator">===</span> <span class="token string">&quot;large&quot;</span><span class="token punctuation">,</span>\n              <span class="token string">&quot;Input-small&quot;</span><span class="token operator">:</span> props<span class="token punctuation">.</span>size <span class="token operator">===</span> <span class="token string">&quot;small&quot;</span><span class="token punctuation">,</span>\n              <span class="token string">&quot;has-error&quot;</span><span class="token operator">:</span> props<span class="token punctuation">.</span>hasError<span class="token punctuation">,</span>\n              <span class="token string">&quot;has-icon&quot;</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token operator">!</span>props<span class="token punctuation">.</span>icon<span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">&gt;</span></span><span class="token plain-text">\n          </span><span class="token punctuation">{</span>slots<span class="token punctuation">.</span>prepend <span class="token operator">?</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Input-addon Input-addon-prepend<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n              </span><span class="token punctuation">{</span>slots<span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n          <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">}</span><span class="token plain-text">\n          </span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>icon <span class="token operator">?</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Input-icon-wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Input-icon<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Icon</span></span> <span class="token attr-name">type</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>icon<span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">\n              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n              </span><span class="token punctuation">{</span>input<span class="token punctuation">}</span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n          <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>\n            input\n          <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n          </span><span class="token punctuation">{</span>slots<span class="token punctuation">.</span>append <span class="token operator">?</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Input-addon Input-addon-append<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n              </span><span class="token punctuation">{</span>slots<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n          <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">}</span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  methods<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.Input&quot;</span><span class="token punctuation">)</span><span class="token operator">?.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Input<span class="token punctuation">;</span>\n</code></pre></div>',6);u.render=function(o,e,c,u,r,g){const d=n("frame");return a(),s("div",null,[l,t(d,{hashPath:""},{default:p((()=>[k])),_:1}),i])};export default u;export{c as __pageData};
